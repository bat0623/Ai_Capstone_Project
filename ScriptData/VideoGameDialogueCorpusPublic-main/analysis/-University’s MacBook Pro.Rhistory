word = names(target),
loglikelihood = llx[1,],
p = llx[2,])
res = res[res$p<0.05,]
allres = rbind(allres,res)
}
}
i
dim(d)
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
llx = sapply(1:ncol(target),function(x){
# for(x in 1:ncol(target)){
freqtarg = NA
if(is.null(dim(target))){
freqtarg = target
} else{
freqtarg = target[1,x]
}
logLikelihood.test(freqtarg,ref[x],targetTotalFreq,refTotalFreq,silent = T)
})
for(x in 1:ncol(target)){
freqtarg = NA
if(is.null(dim(target))){
freqtarg = target
} else{
freqtarg = target[1,x]
}
logLikelihood.test(freqtarg,ref[x],targetTotalFreq,refTotalFreq,silent = T)}
x
dim(target)
length(target)
# for(x in 1:ncol(target)){
freqtarg = NA
if(is.null(dim(target))){
freqtarg = target
} else{
freqtarg = target[1,x]
}
freqtarg
freqtarg
ref[x]
logLikelihood.test(freqtarg,ref[x],targetTotalFreq,refTotalFreq,silent = T)
for(x in 1:ncol(target)){
freqtarg = NA
if(is.null(dim(target))){
freqtarg = target
} else{
freqtarg = target[1,x]
}
logLikelihood.test(freqtarg,ref[x],targetTotalFreq,refTotalFreq,silent = T)}
x
is.null(dim(target))
# for(x in 1:ncol(target)){
freqtarg = NA
if(is.null(dim(target))){
freqtarg = target
} else{
freqtarg = target[1,x]
}
logLikelihood.test(freqtarg,ref[x],targetTotalFreq,refTotalFreq,silent = T)
1:ncol(target)
logLikelihood.G2(20,200,10000,10000)
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
logLikelihood.G2(target[1,],ref,targetTotalFreq,refTotalFreq)
llx = logLikelihood.G2(target[1,],ref,targetTotalFreq,refTotalFreq)
head(llx)
names(llx) = NA
head(llx)
length(ref)
length(target)
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
length(ref)
dim(target)
length(target)
# only one value
llx = logLikelihood.test(target,ref,targetTotalFreq,refTotalFreq,silent = T)
llx
llx[1,]
d = read.csv("../results/tropes/tropeWordFreq.csv",stringsAsFactors = F)
allres = data.frame()
for(i in 1:nrow(d)){
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
# If there's no words, don't process
if(targetTotalFreq>0){
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
llx = NA
if(is.null(dim(target))){
# only one value
llx = logLikelihood.test(target,ref,targetTotalFreq,refTotalFreq,silent = T)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx[1],
p = llx[2])
res = res[res$p<0.05,]
allres = rbind(allres,res)
} else{
# More than one target
llx = sapply(1:ncol(target),function(x){
# for(x in 1:ncol(target)){
logLikelihood.test(target[1,x],ref[x],targetTotalFreq,refTotalFreq,silent = T)
})
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx[1,],
p = llx[2,])
res = res[res$p<0.05,]
allres = rbind(allres,res)
}
}
}
i
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
targetTotalFreq>0
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
is.null(dim(target))
# only one value
llx = logLikelihood.test(target,ref,targetTotalFreq,refTotalFreq,silent = T)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx[1],
p = llx[2])
names(target)
names(ref)
d = read.csv("../results/tropes/tropeWordFreq.csv",stringsAsFactors = F)
allres = data.frame()
for(i in 1:nrow(d)){
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
# If there's no words, don't process
if(targetTotalFreq>0){
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
if(is.null(dim(target))){
# only one value
llx = logLikelihood.test(target,ref,targetTotalFreq,refTotalFreq,silent = T)
res = data.frame(trope = d$.TROPE[i],
word = names(ref)[1],
loglikelihood = llx[1],
p = llx[2])
res = res[res$p<0.05,]
allres = rbind(allres,res)
} else{
# More than one target
llx = sapply(1:ncol(target),function(x){
# for(x in 1:ncol(target)){
logLikelihood.test(target[1,x],ref[x],targetTotalFreq,refTotalFreq,silent = T)
})
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx[1,],
p = llx[2,])
res = res[res$p<0.05,]
allres = rbind(allres,res)
}
}
}
i
dim(d)
allres = allres[order(abs(allres$loglikelihood),decreasing = T),]
View(allres)
a = 1:5
b = 1:5
E1 = 1000
G2PartA = (a*log(a/E1))
G2PartA
G2PartA[a==2] = 0
G2PartA
G2PartA = 2
a = 2
G2PartA = (a*log(a/E1))
G2PartA
G2PartA[a==2] = 0
G2PartA
target
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
length(target)
logLikelihood.G2 = function(a,b,c,d){
c = as.double(c)
d = as.double(d)
E1 = c*(a+b) / (c+d)
E2 = d*(a+b) / (c+d)
G2PartA = (a*log(a/E1))
G2PartA[a==0] = 0
G2PartB = (b*log(b/E2))
G2PartB[b==0] = 0
G2 = 2*(G2PartA + G2PartB)
return(G2)
}
d = read.csv("../results/tropes/tropeWordFreq.csv",stringsAsFactors = F)
allres = data.frame()
i
i = 1
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
targetTotalFreq>0
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx,
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
head(res)
dim(llx)
llx[[1]]
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx,
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
res = res[abs(res$loglikelihood)>3,]
head(res)
length(llx)
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
length(res)
llx
head(ref)
head(target)
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
head(target)
head(ref)
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
head(ref)
head(target)
length(ref)
target = d[i,2:ncol(d)]
dim(target)
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
length(ref)
length(target)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
sum(target[1,]>0)
head(ref)
length(ref)
length(target)
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
head(ref)
head(target)
dim(target)
dim(ref)
length(ref)
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
length(d$.TROPE[i])
head(names(d))
head(d$.TROPE)
head(d$.TROPE[i])
d$.TROPE[i]
d$.TROPE[i]
names(target)
llx
targetTotalFreq
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx,
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
head(res)
res = data.frame(#trope = d$.TROPE[i],
word = names(target),
loglikelihood = llx,
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
head(res)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = unlist(llx),
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
head(res)
logLikelihood.G2 = function(a,b,c,d){
c = as.double(c)
d = as.double(d)
E1 = c*(a+b) / (c+d)
E2 = d*(a+b) / (c+d)
G2PartA = (a*log(a/E1))
G2PartA[a==0] = 0
G2PartB = (b*log(b/E2))
G2PartB[b==0] = 0
G2 = 2*(G2PartA + G2PartB)
return(G2)
}
d = read.csv("../results/tropes/tropeWordFreq.csv",stringsAsFactors = F)
allres = data.frame()
for(i in 1:nrow(d)){
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
# If there's no words, don't process
if(targetTotalFreq>0){
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = unlist(llx),
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
res = res[abs(res$loglikelihood)>3,]
allres = rbind(allres,res)
# if(is.null(dim(target))){
#   # only one value
#   llx = logLikelihood.test(target,ref,targetTotalFreq,refTotalFreq,silent = T)
#   res = data.frame(trope = d$.TROPE[i],
#                    word = names(ref)[1],
#                    loglikelihood = llx[1],
#                    p = llx[2])
#   res = res[res$p<0.05,]
#   allres = rbind(allres,res)
# } else{
#   # More than one target
#
#   llx = sapply(1:ncol(target),function(x){
#     # for(x in 1:ncol(target)){
#     logLikelihood.test(target[1,x],ref[x],targetTotalFreq,refTotalFreq,silent = T)
#   })
#   res = data.frame(trope = d$.TROPE[i],
#                   word = names(target),
#                    loglikelihood = llx[1,],
#                    p = llx[2,],
#                    totalTropeDialogue = targetTotalFreq)
#   res = res[res$p<0.05,]
#   allres = rbind(allres,res)
# }
}
}
i
nrow(d)
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
targetTotalFreq>0
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = unlist(llx),
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
length(llx)
head(ref)
head(target)
res = data.frame(trope = d$.TROPE[i],
word = names(target),
loglikelihood = unlist(llx),
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
d$.TROPE[i]
names(target)
names(ref)
res = data.frame(trope = d$.TROPE[i],
word = names(ref),
loglikelihood = unlist(llx),
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
# If there's no words, don't process
if(targetTotalFreq>0){
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
res = data.frame(trope = d$.TROPE[i],
word = names(ref),
loglikelihood = unlist(llx),
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
res = res[abs(res$loglikelihood)>3,]
allres = rbind(allres,res)
# if(is.null(dim(target))){
#   # only one value
#   llx = logLikelihood.test(target,ref,targetTotalFreq,refTotalFreq,silent = T)
#   res = data.frame(trope = d$.TROPE[i],
#                    word = names(ref)[1],
#                    loglikelihood = llx[1],
#                    p = llx[2])
#   res = res[res$p<0.05,]
#   allres = rbind(allres,res)
# } else{
#   # More than one target
#
#   llx = sapply(1:ncol(target),function(x){
#     # for(x in 1:ncol(target)){
#     logLikelihood.test(target[1,x],ref[x],targetTotalFreq,refTotalFreq,silent = T)
#   })
#   res = data.frame(trope = d$.TROPE[i],
#                   word = names(target),
#                    loglikelihood = llx[1,],
#                    p = llx[2,],
#                    totalTropeDialogue = targetTotalFreq)
#   res = res[res$p<0.05,]
#   allres = rbind(allres,res)
# }
}
head(res)
head(allres)
allres = allres[order(abs(allres$loglikelihood),decreasing = T),]
View(allres)
d = read.csv("../results/tropes/tropeWordFreq.csv",stringsAsFactors = F)
allres = data.frame()
for(i in 1:nrow(d)){
target = d[i,2:ncol(d)]
ref = d[-i,2:ncol(d)]
ref = colSums(ref)
targetTotalFreq = sum(target[1,])
refTotalFreq = sum(ref)
# If there's no words, don't process
if(targetTotalFreq>0){
# Don't bother calculating cases where the target frequency is zero
ref = ref[target[1,]>0]
target = target[,target[1,]>0]
# TODO: work out p value?
llx = logLikelihood.G2(target,ref,targetTotalFreq,refTotalFreq)
res = data.frame(trope = d$.TROPE[i],
word = names(ref),
loglikelihood = unlist(llx),
#p = llx[2,],
totalTropeDialogue = targetTotalFreq)
res = res[abs(res$loglikelihood)>3,]
allres = rbind(allres,res)
}
}
allres = allres[order(abs(allres$loglikelihood),decreasing = T),]
write.csv(allres, file="../results/tropes/tropeKeywords.csv",
row.names = F,fileEncoding = "UTF-8")
View(allres)
plot(allres$loglikelihood,allres$totalTropeDialogue)
dim(allres)
View(allres[allres$totalTropeDialogue>1000,])
head(sort(table(allres$trope),decreasing = T))
head(sort(table(allres$trope),decreasing = T),10)
head(sort(table(allres$trope),decreasing = T),20)
head(sort(table(allres$trope),decreasing = T),40)
allres[allres$trope=="Ambiguous Gender",]
head(sort(table(allres$trope),decreasing = T))[40:80]
head(sort(table(allres$trope),decreasing = T),100)
allres[allres$trope=="Nice Girl",]
allres[allres$trope=="Action Girl",]
allres[allres$word=="sorry",]
